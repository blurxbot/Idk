import discord
from discord import app_commands
from discord.ext import commands, tasks
import os
import asyncio
from flask import Flask, request, render_template_string
import threading

# --- DISCORD BOT SETUP ---
intents = discord.Intents.default()
intents.members = True

bot = commands.Bot(command_prefix="!", intents=intents)

# A shared list where the website can drop commands
dashboard_commands = []

# --- BOT EVENTS ---
@bot.event
async def on_ready():
    print(f"✅ Logged in as {bot.user}")
    try:
        synced = await bot.tree.sync()
        print(f"🔗 Synced {len(synced)} slash commands.")
    except Exception as e:
        print(e)


# --- SLASH COMMANDS ---
@bot.tree.command(name="kick", description="Kick a user")
@app_commands.describe(member="The member to kick", reason="Reason for kicking")
async def kick(interaction: discord.Interaction, member: discord.Member, reason: str = "No reason"):
    await member.kick(reason=reason)
    await interaction.response.send_message(f"👢 {member} was kicked. Reason: {reason}")

@bot.tree.command(name="ban", description="Ban a user")
async def ban(interaction: discord.Interaction, member: discord.Member, reason: str = "No reason"):
    await member.ban(reason=reason)
    await interaction.response.send_message(f"🔨 {member} was banned. Reason: {reason}")


# --- TASK LOOP TO CHECK DASHBOARD COMMANDS ---
@tasks.loop(seconds=5)
async def check_dashboard_commands():
    if dashboard_commands:
        cmd = dashboard_commands.pop(0)
        print(f"⚡ Executing dashboard command: {cmd}")
        # Example: send it to a log channel (replace with your channel ID)
        channel_id = 123456789012345678  # <- put your channel ID here
        channel = bot.get_channel(channel_id)
        if channel:
            await channel.send(f"🌐 Dashboard triggered command: `{cmd}`")
        else:
            print("❌ Could not find channel. Update channel_id!")


# --- FLASK DASHBOARD ---
app = Flask("dashboard")

@app.route("/")
def home():
    return render_template_string("""
        <h1>Bot Dashboard</h1>
        <form action="/send" method="post">
            <input name="command" placeholder="Enter command..."/>
            <button type="submit">Run</button>
        </form>
    """)

@app.route("/send", methods=["POST"])
def send():
    cmd = request.form["command"]
    dashboard_commands.append(cmd)
    return f"✅ Command '{cmd}' sent to bot!"


def run_dashboard():
    app.run(host="0.0.0.0", port=8080)


# --- STARTUP ---
def main():
    # Start Flask in background thread
    threading.Thread(target=run_dashboard).start()
    # Start task loop
    check_dashboard_commands.start()
    # Run Discord bot
    bot.run(os.getenv("TOKEN"))


if __name__ == "__main__":
    main()
